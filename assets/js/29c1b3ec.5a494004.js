"use strict";(self.webpackChunkdp_dokumentasjon=self.webpackChunkdp_dokumentasjon||[]).push([[8172],{5125:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var n=t(5893),s=t(1151);const i={sidebar_position:4},o="Meldekort-frontend",l={id:"innbyggerflate/losninger/meldeplikt/meldekort-mikrofrontend",title:"Meldekort-frontend",description:'Meldekort-frontend er en "kopi" av den gamle frontenden meldekort.\\',source:"@site/docs/innbyggerflate/losninger/meldeplikt/meldekort-mikrofrontend.mdx",sourceDirName:"innbyggerflate/losninger/meldeplikt",slug:"/innbyggerflate/losninger/meldeplikt/meldekort-mikrofrontend",permalink:"/dp-dokumentasjon/innbyggerflate/losninger/meldeplikt/meldekort-mikrofrontend",draft:!1,unlisted:!1,editUrl:"https://github.com/navikt/dp-dokumentasjon/docs/innbyggerflate/losninger/meldeplikt/meldekort-mikrofrontend.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Meldekort-mikrofrontend",permalink:"/dp-dokumentasjon/innbyggerflate/losninger/meldeplikt/meldekort-frontend"},next:{title:"Rapportering",permalink:"/dp-dokumentasjon/innbyggerflate/losninger/rapportering/"}},d={},a=[];function k(e){const r={a:"a",br:"br",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"meldekort-frontend",children:"Meldekort-frontend"}),"\n",(0,n.jsxs)(r.p,{children:['Meldekort-frontend er en "kopi" av den gamle frontenden ',(0,n.jsx)(r.a,{href:"https://github.com/navikt/meldekort",children:"meldekort"}),".",(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.code,{children:"meldekort"})," hadde allerede ganske forvirrende kode med ",(0,n.jsx)(r.a,{href:"https://craco.js.org/",children:"CRACO"}),", React og Redux (dvs. med State, Actions og Reducers) som ble stadig vanskeligere \xe5 vedlikeholde og oppdatere.",(0,n.jsx)(r.br,{}),"\n","Derfor ble det bestemt \xe5 flyttet logikk fra ",(0,n.jsx)(r.code,{children:"meldekort"})," til en ny applikasjon basert p\xe5 Remix - ",(0,n.jsx)(r.code,{children:"meldekort-frontend"})," - for \xe5 gj\xf8re det enklere for andre utviklere \xe5 jobbe med koden.",(0,n.jsx)(r.br,{}),"\n","Ingen endringer ble gjort i backend-koden."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"meldekort-frontend"})," er en ganske vanlig Remix-applikasjon. Det eneste som interessant her er at vi m\xe5 hente alle tekster fra ",(0,n.jsx)(r.code,{children:"meldekort-api"})," iht valgt meldekort.\nApplikasjonen pr\xf8ver \xe5 laste ned tekstene fra ",(0,n.jsx)(r.code,{children:"/locales/:sprak/:fraDato.json"}),". Slike requester fanges opp av server.js. Server.js sender request videre til ",(0,n.jsx)(r.code,{children:"meldekort-api"}),", f\xe5r tekstene derfra og returnerer dem.\nDermed f\xe5r applikasjonen tekstene fra ",(0,n.jsx)(r.code,{children:"meldekort-api"})," uten \xe5 vite om dette."]}),"\n",(0,n.jsx)(r.p,{children:"Applikasjonen har 5 hoved sider:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Send meldekort"}),"\n",(0,n.jsx)(r.li,{children:"Tidligere meldekort"}),"\n",(0,n.jsx)(r.li,{children:"Etterregistrere meldekort"}),"\n",(0,n.jsx)(r.li,{children:"Om meldekort"}),"\n",(0,n.jsx)(r.li,{children:"Ofte stilte sp\xf8rsm\xe5l"}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:['"Send meldekort" og "Etterregistrere meldekort" viser lister med meldekort som kan sendes og etterregistreres henholdsvis.',(0,n.jsx)(r.br,{}),"\n",'B\xe5de "Send meldekort" og "Etterregistrere meldekort" sjekker om det finnes ett eller flere meldekort som kan sendes.',(0,n.jsx)(r.br,{}),"\n","Hvis det finnes kun ett, sendes bruker til dette meldekort med en gang.",(0,n.jsx)(r.br,{}),"\n",'Hvis det finnes flere enn fem meldekort, viser "Send meldekort" en feilmelding. "Etterregistrere meldekort" har ikke slikk logikk.',(0,n.jsx)(r.br,{}),"\n",'Hvis de ikke finnes meldekort som kan sendes n\xe5, sjekker "Send meldekort" om det finnes meldekort som ikke kan sendes enn\xe5 og viser informasjon om f\xf8rste slike meldekort.']}),"\n",(0,n.jsxs)(r.p,{children:['"Tidligere meldekort" viser en liste med allerede sente meldekort.',(0,n.jsx)(r.br,{}),"\n","Det er mulig \xe5 klikke p\xe5 hvert meldekort fra denne listen og f\xe5 se detaljene til dette meldekortet.",(0,n.jsx)(r.br,{}),"\n","Fra detaljene er det ogs\xe5 mulig \xe5 \xe5pne meldekort for korrigering (hvis dette meldekort er korrigerbart)."]}),"\n",(0,n.jsx)(r.p,{children:'"Om meldekort" og "Ofte stilte sp\xf8rsm\xe5l" er statiske sider med tekst.'}),"\n",(0,n.jsx)(r.p,{children:"Ved sending, etterregistrering og korrigering m\xe5 brukere g\xe5 gjennom 4 steg:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"Sp\xf8rsm\xe5l"}),"\n",(0,n.jsx)(r.li,{children:"Utfylling"}),"\n",(0,n.jsx)(r.li,{children:"Bekreftelse"}),"\n",(0,n.jsx)(r.li,{children:"Kvittering"}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["Sp\xf8rsm\xe5l-steget inneholder 5 sp\xf8rsm\xe5l om aktiviteter for rapporteringsperioden:\nom bruker har jobbet, har deltatt p\xe5 kurs/utdanning, har v\xe6rt syk, har hatt ferie eller annet frav\xe6r og om bruker fortsatt \xf8nsker \xe5 v\xe6re registrert som arbeidss\xf8ker.",(0,n.jsx)(r.br,{}),"\n","Ved korrigering m\xe5 man ogs\xe5 velge \xe9n fra begrunnelsene til korrigering.",(0,n.jsx)(r.br,{}),"\n","Hvis bruker svarer Nei p\xe5 de f\xf8rste fire sp\xf8rsm\xe5lene (om aktiviteter), sendes han videre til Bekreftelse-steget fordi det er ingen vits i \xe5 vise ham Utfylling-steget.",(0,n.jsx)(r.br,{}),"\n","Hvis bruker svarer Nei p\xe5 det femte sp\xf8rsm\xe5let (dvs. bruker \xf8nsker ikke \xe5 v\xe6re registrert som arbeidss\xf8ker videre), viser applikasjonen et modal-vindu og ber om \xe5 bekrefte svaret."]}),"\n",(0,n.jsx)(r.p,{children:"Utfylling-steget viser rader som tilsvarer typer aktiviteter og kolonner som tilsvarer dager slik at bruker kan skrive inn hvor mange timer han har jobbet eller velge type aktivitet han har hatt hver dag i raporteringsperioden."}),"\n",(0,n.jsx)(r.p,{children:"Bekreftelse-steget viser all data som bruker har oppgitt slik at bruker kan sjekke en gang til at alt stemmer. I tillegg m\xe5 bruker bekrefte at han har oppgitt riktige opplysninger og at han har lest og forst\xe5tt veiledningstekstene."}),"\n",(0,n.jsx)(r.p,{children:"Kvittering-steget viser all data som bruker har oppgitt og informasjon om at meldekort har blitt mottatt."})]})}function m(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(k,{...e})}):k(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>l,a:()=>o});var n=t(7294);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);